
trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  imageName: 'asp-web'
  environmentName: 'WebServiceENV'

stages:
- stage: Build_Docker_Image_Push_to_Docker_Hub
  displayName: Build Docker Image
  jobs:  
  - job: Build_Docker_Image
    displayName: Build Docker Image
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Bash@3
      displayName: Access Secret
      inputs:
        targetType: 'inline'
        script: |
          echo "Build Start Get Secret Environment Variable"
          echo $(secret_pwd)
          echo $MY_Secret_PWD
      env:
        MY_Secret_PWD: $(secret_pwd)  
    - task: Docker@2
      displayName: Build Docker Image
      inputs:
        containerRegistry: 'docker_AzureDevOps'
        repository: 'juyi504/azure_project'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/dotnet/aspnetcore/container/Application/aspnet-core-dotnet-core/Dockerfile'
        tags: '$(Build.BuildId)'


- stage: archive_file
  displayName: Archive File
  jobs:  
  - job: Archive_Build
    displayName: Archive Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)/html'
        includeRootFolder: false
        archiveType: 'tar'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).tar'
        replaceExistingArchive: true

- stage: publish_to_s3
  displayName: Publish artifact to AWS S3
  jobs:  
  - job: publish_to_aws_s3
    displayName: Publish artifact to AWS S3
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: S3Upload@1
      displayName: Publish archive file to s3 bucket
      inputs:
        awsCredentials: 'aws_AzureDevOps'
        regionName: 'us-west-1'
        bucketName: 'azure-dev-ops-ci-504'
        sourceFolder: '$(Build.ArtifactStagingDirectory)'
        globExpressions: '**'
        targetFolder: 'webService01'


- stage: publish_artifact
  displayName: Publish Artifact
  jobs:  
  - job: publish_artifact
    displayName: Publish Artifact
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: PublishBuildArtifacts@1
      displayName: Publish build artifact
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'buildArtifact'
        publishLocation: 'Container'
    

    
    

- stage: Deploy
  displayName: Deploy WebService TO AWS
  dependsOn: publish_to_s3
  condition: succeeded()
  jobs:
  - deployment: DeployWebService
    pool:
       vmImage: 'ubuntu-latest'
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:      
          steps:
            - task: CodeDeployDeployApplication@1
              inputs:
                awsCredentials: 'aws_AzureDevOps'
                regionName: 'us-west-1'
                applicationName: 'webService01'
                deploymentGroupName: 'webService01'
                deploymentRevisionSource: 's3'
                bucketName: 'azure-dev-ops-ci-504'
                bundleKey: 'webService01/$(Build.BuildId).tar'


            
    




